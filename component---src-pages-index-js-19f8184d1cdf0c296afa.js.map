{"version":3,"sources":["webpack:///./src/mui/withRoot.js","webpack:///./src/pages/index.js","webpack:///./src/mui/getPageContext.js"],"names":["withRoot","Component","_React$Component","WithRoot","props","_this","call","this","muiPageContext","getPageContext","inheritsLoose_default","_proto","prototype","componentDidMount","jssStyles","document","querySelector","parentNode","removeChild","render","react_default","a","createElement","JssProvider_default","generateClassName","styles","theme","sheetsManager","CssBaseline_default","React","BlogIndex","_this$props","data","siteTitle","classes","site","siteMetadata","title","posts","allMarkdownRemark","edges","Layout","location","postTitle","seo","keywords","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby_browser_entry","boxShadow","to","urlPath","SubInfo","date","tags","dangerouslySetInnerHTML","__html","excerpt","pageQuery","withStyles","card","maxWidth","styled","ul","_templateObject","li","_templateObject2","tImage","div","_templateObject3","createMuiTheme","palette","primary","light","purple","main","dark","secondary","green","typography","useNextVariants","createPageContext","Map","sheetsRegistry","SheetsRegistry","createGenerateClassName","process","browser","global","__INIT_MATERIAL_UI__"],"mappings":"0PA0CeA,MApCf,SAAkBC,GAiChB,OAjC2B,SAAAC,GAEzB,SAAAC,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAH,EAAAI,KAAAC,KAAMH,IAANG,MACKC,eAAiBC,cAFLJ,EAFMK,IAAAP,EAAAD,GAAA,IAAAS,EAAAR,EAAAS,UAAA,OAAAD,EAOzBE,kBAAA,WAEE,IAAMC,EAAYC,SAASC,cAAc,oBACrCF,GAAaA,EAAUG,YACzBH,EAAUG,WAAWC,YAAYJ,IAXZH,EAezBQ,OAAA,WACE,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAaG,kBAAmBjB,KAAKC,eAAegB,mBAGlDJ,EAAAC,EAAAC,cAACG,EAAA,iBAAD,CACEC,MAAOnB,KAAKC,eAAekB,MAC3BC,cAAepB,KAAKC,eAAemB,eAGnCP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,MACAD,EAAAC,EAAAC,cAACrB,EAAcM,KAAKH,UA1BHD,EAAA,CACJ0B,IAAM5B,k4BCa/B,IAMM6B,4FACJX,OAAA,WAAS,IAAAY,EACmBxB,KAAKH,MAAvB4B,EADDD,EACCC,KACFC,GAFCF,EACOG,QACIF,EAAKG,KAAKC,aAAaC,OACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACEpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQC,SAAUnC,KAAKH,MAAMsC,SAAUL,MAAOJ,EAAWU,UAAU,SACjEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACEP,MAAM,YACNQ,SAAU,yCAIXP,EAAMQ,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KACpD,OACE/B,EAAAC,EAAAC,cAAA,OAAK8B,IAAKJ,EAAKE,OAAOC,MACpB/B,EAAAC,EAAAC,cAAA,MACE+B,MAAO,CACLC,aAAcC,YAAO,OAGvBnC,EAAAC,EAAAC,cAACkC,EAAA,KAAD,CAAMH,MAAO,CAAEI,UAAS,QAAYC,GAAIV,EAAKE,OAAOS,SACjDtB,IAGLjB,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CACEC,KAAMb,EAAKC,YAAYY,KACvBC,KAAMd,EAAKC,YAAYa,OAEzB1C,EAAAC,EAAAC,cAAA,KAAGyC,wBAAyB,CAAEC,OAAQhB,EAAKiB,mBA/BjCpC,IAAM5B,WA2CjBiE,GAFElE,YAASmE,qBA/CT,SAAAzC,GAAK,MAAK,CACvB0C,KAAM,CACJC,SAAU,OA6CUF,CAAmBrC,IAErB,cAoCCwC,IAAOC,GAAVC,KAQJF,IAAOG,GAAVC,IAcWC,KAGJL,IAAOM,IAAVC,yKCzHXnD,EAAQoD,yBAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,MAAOC,IAAO,KACdC,KAAMD,IAAO,KACbE,KAAMF,IAAO,MAEfG,UAAW,CACTJ,MAAOK,IAAM,KACbH,KAAMG,IAAM,KACZF,KAAME,IAAM,OAGhBC,WAAY,CACVC,iBAAiB,KAIrB,SAASC,IACP,MAAO,CACL/D,QAEAC,cAAe,IAAI+D,IAEnBC,eAAgB,IAAIC,iBAEpBpE,kBAAmBqE,qCAIR,SAASpF,IAGtB,OAAKqF,EAAQC,SAKRC,EAAOC,uBACVD,EAAOC,qBAAuBR,KAGzBO,EAAOC,sBARLR","file":"component---src-pages-index-js-19f8184d1cdf0c296afa.js","sourcesContent":["import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport getPageContext from './getPageContext';\n\nfunction withRoot(Component) {\n  class WithRoot extends React.Component {\n    constructor(props) {\n      super(props);\n      this.muiPageContext = getPageContext();\n    }\n\n    componentDidMount() {\n      // Remove the server-side injected CSS.\n      const jssStyles = document.querySelector('#jss-server-side');\n      if (jssStyles && jssStyles.parentNode) {\n        jssStyles.parentNode.removeChild(jssStyles);\n      }\n    }\n\n    render() {\n      return (\n        <JssProvider generateClassName={this.muiPageContext.generateClassName}>\n          {/* MuiThemeProvider makes the theme available down the React\n              tree thanks to React context. */}\n          <MuiThemeProvider\n            theme={this.muiPageContext.theme}\n            sheetsManager={this.muiPageContext.sheetsManager}\n          >\n            {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n            <CssBaseline />\n            <Component {...this.props} />\n          </MuiThemeProvider>\n        </JssProvider>\n      );\n    }\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nimport { withStyles } from '@material-ui/core/styles';\nimport withRoot from \"../mui/withRoot\";\nimport styled from 'styled-components'\nimport {SubInfo} from '../components/SubInfo'\nimport Image from 'gatsby-image'\nimport tImage from '../../content/assets/bg1.jpeg'\nimport Paper from '@material-ui/core/Paper';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport { red } from 'material-ui/colors';\nimport Card from '@material-ui/core/Card';\n\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 400,\n  },\n});\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data, classes } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} postTitle=\"(ㆆᴗㆆ)\">\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {/* <Card className={classes.card}>sdfsf</Card>   */}\n        \n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.urlPath}>\n                  {title}\n                </Link>\n              </h3>\n              <SubInfo\n                date={node.frontmatter.date}\n                tags={node.frontmatter.tags}\n                ></SubInfo>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n\n    </Layout>\n    )\n  }\n}\n\nexport default withRoot(withStyles(styles)(BlogIndex));\n\nexport const pageQuery = graphql`\n  query {\n    bgImage1: file(absolutePath: { regex: \"/bg1.jpeg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 4096) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { publish: { eq: true}}}\n      ) {\n      edges { \n        node {\n          excerpt\n          fields {\n            urlPath\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n\nconst BgImageWrapper = styled.ul`\nlist-style: none;\nmargin: 0;\npadding: 0;\n// z-index: -1;\ntransition: transform .3s ease-out;\n`\n\nconst BgImage = styled.li`\nmargin:0;\npadding:0;\nposition: fixed;\ntop: 0px;\nleft: 0;\nright: 0;\nbottom: 0;\nopacity: 1;\nz-index: -100;\nbackground-color: transparent;\nbackground-size: cover;\nbackground-position: center center;\nbackground-repeat: no-repeat;\nbackground-image: url(${tImage});\n`\n\nconst PostsPapper = styled.div`\n  box-shadow: 0px 1px 3px 2px rgba(0,0,0,0.2),\n    0px 1px 1px 0px rgba(0,0,0,0.14),\n    0px 2px 1px -1px rgba(0,0,0,0.12);\n  padding: 1px 2rem;\n  // box-sizing: border-box;\n  border-radius: 8px;\n  background-color: rgba(255,255,255,0.8);\n`","/* eslint-disable no-underscore-dangle */\n\nimport { SheetsRegistry } from 'jss';\nimport { createMuiTheme, createGenerateClassName } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700],\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName(),\n  };\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  }\n\n  // Reuse context on the client-side.\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext();\n  }\n\n  return global.__INIT_MATERIAL_UI__;\n}"],"sourceRoot":""}