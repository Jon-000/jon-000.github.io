{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","location","postTitle","frontmatter","_components_seo__WEBPACK_IMPORTED_MODULE_5__","description","excerpt","style","marginBottom","_components_SubInfo__WEBPACK_IMPORTED_MODULE_7__","date","tags","margin","dangerouslySetInnerHTML","__html","html","rhythm","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","urlPath","rel","React","Component","pageQuery"],"mappings":"mOASMA,4FACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7CC,EAGoBR,KAAKC,MAAMQ,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KAElB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUhB,KAAKC,MAAMe,SAAUT,MAAOH,EAAWa,UAAWlB,EAAKmB,YAAYX,OACnFK,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKZ,MAAOR,EAAKmB,YAAYX,MAAOa,YAAarB,EAAKsB,UACtDT,EAAAC,EAAAC,cAAA,MAAIQ,MAAO,CAACC,aAAc,IAAKxB,EAAKmB,YAAYX,OAEhDK,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,KAAM1B,EAAKmB,YAAYO,KACvBC,KAAM3B,EAAKmB,YAAYQ,KACvBC,OAAO,iBAGTf,EAAAC,EAAAC,cAAA,OAAKc,wBAAyB,CAAEC,OAAQ9B,EAAK+B,QAC7ClB,EAAAC,EAAAC,cAAA,MACEQ,MAAO,CACLC,aAAcQ,YAAO,MAKzBnB,EAAAC,EAAAC,cAAA,MACEQ,MAAO,CACLU,QAAO,OACPC,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGXxB,EAAAC,EAAAC,cAAA,UACGJ,GACCE,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMC,GAAI5B,EAAS6B,OAAOC,QAASC,IAAI,QAAvC,KACK/B,EAASQ,YAAYX,QAI9BK,EAAAC,EAAAC,cAAA,UACGH,GACCC,EAAAC,EAAAC,cAACuB,EAAA,KAAD,CAAMC,GAAI3B,EAAK4B,OAAOC,QAASC,IAAI,QAChC9B,EAAKO,YAAYX,MADpB,aA3CiBmC,IAAMC,WAsDtB9C,YAER,IAAM+C,EAAS","file":"component---src-templates-blog-post-js-27c4d823eb2a70b4f80b.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\nimport {SubInfo} from '../components/SubInfo'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} postTitle={post.frontmatter.title}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1 style={{marginBottom: 9}}>{post.frontmatter.title}</h1>\n            \n        <SubInfo\n          date={post.frontmatter.date}\n          tags={post.frontmatter.tags}\n          margin=\"0 0 1.5rem 0\"\n          ></SubInfo>\n        \n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        {/* <Bio /> */}\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.urlPath} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.urlPath} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostByUrlPath($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(\n      fields: { urlPath: { eq: $path } }\n      ) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}