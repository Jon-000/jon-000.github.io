{"data":{"site":{"siteMetadata":{"title":"Jon's Blog","author":""}},"markdownRemark":{"id":"ca332bfc-5df3-51c6-ba0f-058d0dc2f964","excerpt":"bandwagonhost控制面板KiwiVM安装新的OS,ubuntu 16.04 LTS x86_64 安装完成后页面会给出root密码和端口号 本地电脑命令行ssh远程连接到vps： 输入前面给出的root密码 重置root密码 输入新密码Ohroot…","html":"<p>bandwagonhost控制面板KiwiVM安装新的OS,ubuntu 16.04 LTS x86_64</p>\n<p>安装完成后页面会给出root密码和端口号</p>\n<p>本地电脑命令行ssh远程连接到vps：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ssh -p 27202 root@97.64.37.190</code></pre></div>\n<p>输入前面给出的root密码</p>\n<p>重置root密码</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">passwd //可加参数指定修改哪个用户的密码，不指定则默认为修改当前用户</code></pre></div>\n<p>输入新密码Ohroot</p>\n<p>登录成功后创建一个新的普通用户，（用户名开头不能大写，这似乎是Debian的默认规定，因此用户名就设置为全小写好了）</p>\n<p>useradd和adduser区别自行百度或man，这里使用adduser</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">adduser zhao</code></pre></div>\n<p>按照提示设置密码hizhao</p>\n<p>为用户添加sudo权限，命令行输入：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">visudo</code></pre></div>\n<p>添加：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">zhao ALL=(ALL:ALL) ALL</code></pre></div>\n<p>ctrl+x退出，y保存，回车不修改文件名</p>\n<p>在创建新用户时提示了一个错误信息：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">perl: warning: Setting locale failed.\nperl: warning: Please check that your locale settings:\n      \tLANGUAGE = (unset),\n      \tLC_ALL = (unset),\n      \tLC_PAPER = &quot;zh_CN.UTF-8&quot;,\n      \tLC_ADDRESS = &quot;zh_CN.UTF-8&quot;,\n      \tLC_MONETARY = &quot;zh_CN.UTF-8&quot;,\n      \tLC_NUMERIC = &quot;zh_CN.UTF-8&quot;,\n      \tLC_TELEPHONE = &quot;zh_CN.UTF-8&quot;,\n      \tLC_IDENTIFICATION = &quot;zh_CN.UTF-8&quot;,\n      \tLC_MEASUREMENT = &quot;zh_CN.UTF-8&quot;,\n      \tLC_TIME = &quot;zh_CN.UTF-8&quot;,\n      \tLC_NAME = &quot;zh_CN.UTF-8&quot;,\n      \tLANG = &quot;en_US.UTF-8&quot;\n    are supported and installed on your system.\nperl: warning: Falling back to a fallback locale (&quot;en_US.UTF-8&quot;).</code></pre></div>\n<p>根据这篇文章，因此安装中文语言支持：</p>\n<p>文章对错有待考究，但安装中文语言支持以后总会有用的。</p>\n<p>为了避免潜在问题（这可能只是我的过虑），退出root然后使用新建的一般用户zhao的用户名和密码登录vps</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ssh -p 27207 zhao@97.64.37.190</code></pre></div>\n<p>然后执行如下操作，更新系统并安装中文语言包，便于支持以后涉及到中文字符：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install language-pack-zh-hans</code></pre></div>\n<p>shadowsocks最初为python版，不过作者clowwindy被关照了～祝福～</p>\n<p>shadowsocks-libev为C语言版，轻量级、偏底层、性能好，对我来说不求什么其他功能就够用了。其实是其他功能有点搞不清是干啥的～</p>\n<p>安装shadowsocks-libev，参考doc at github</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt-get install software-properties-common -y\nsudo add-apt-repository ppa:max-c-lv/shadowsocks-libev\nsudo apt-get update\nsudo apt install shadowsocks-libev</code></pre></div>\n<p>创建配置文件/etc/shadowsocks-libev/s1.json</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;server&quot;:&quot;97.64.37.190&quot;, //vps地址，去掉此行不设置也能用，默认监听0.0.0.0:server_port\n  &quot;server_port&quot;:8388, //和客户端的server_port一致\n  &quot;local_port&quot;:1080,  //亲测改成1081，和客户端的local_port不一致也行，去掉此行也能用～～\n  &quot;password&quot;:&quot;ZDgwOWE0OT&quot;, //和客户端一致\n  &quot;timeout&quot;:60,\n  &quot;method&quot;:&quot;aes-256-gcm&quot; //和客户端一致\n}</code></pre></div>\n<p>可通过ss-server -c /etc/shadowsocks-libev/s1.json运行</p>\n<p>客户端运行ss-local -c ss2.json，然后便可以打开浏览器访问YouTube。</p>\n<p>可以参考以下命令直接运行shadowsocks-libev服务</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo service shadowsocks-libev start\nsudo service shadowsocks-libev stop\nsudo service shadowsocks-libev status\nsudo service shadowsocks-libev restart</code></pre></div>\n<p>这时默认调用/etc/shadowsocks-libev/config.json</p>\n<p>故而做如下调整：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd /etc/shadowsocks-libev\nsudo mv config.json config_origin.json //仍保留原本的默认json，其实没啥用，可以删了\nsudo mv s1.json config.json //把刚才创建的json配置改成默认的配置文件名\nsudo service shadowsocks-libev status //查看下状态\nsudo service shadowsocks-libev stop //停下之前的运行，强迫症。。。\nsudo service shadowsocks-libev start //运行服务\nsudo service shadowsocks-libev status //再看下，强迫症。。。</code></pre></div>\n<p>看status命令返回的结果，应该是调用了这个命令1577 /usr/bin/ss-server -c /etc/shadowsocks-libev/config.json -u</p>\n<p>-c指定配置json路径，-u通过ss-server —help命令来查看是Enable UDP relay的作用，意义暂时不理解，有待学习。</p>\n<p>浏览器试下访问外网没问题就可以exit退出ssh了。</p>\n<p>或者通过ss-server命令启动</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo ss-server -c /etc/shadowsocks-libev/config.json -v</code></pre></div>\n<p>运行是提示：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">This system doesn&#39;t provide enough entropy to quickly generate high-quality random numbers\nInstalling the rng-utils/rng-tools or haveged packages may help.\nOn virtualized Linux environments, also consider using virtio-rng.\nThe service will not start until enough entropy has been collected.</code></pre></div>\n<p>从apt里找一个相关的安装试试，然后就没再出现此提示</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo apt-cache search rng\nsudo apt-get install rng-tools</code></pre></div>\n<p>客户端我这里为ubuntu 16.04桌面版，故同样直接使用shadowsocks-libev，安装方法同上使用PPA添加到apt的源中即可</p>\n<p>然后创建个json文件声明配置</p>\n<p>运行ss-local -c path/to/json即可启动</p>\n<p>可加入参数 -v意为verbose mode，可以看到的详情。</p>\n<p>浏览器chrome还要装个SwitchyOmega浏览器插件并配置，ArchLinux的wiki讲的比较清楚。</p>\n<p>告诉域名解析服务器，当访问stillbroken.me这个域名时，指向ip地址为我的vps地址。进行如下操作：</p>\n<p>在DNSPOD中设置记录类型A的记录值为vps的ip地址97.64.37.190，然后便可以使用ssh -p 27207 zhao@stillbroken.me登录</p>\n<p>登录后运行hostname命令可以看到主机名仍为默认的ubuntu，毕竟我没设置过这玩意，那这个hostname是做什么用的呢？什么时候要设置呢？</p>\n<p>命令 whois 域名可以查看域名信息</p>","frontmatter":{"title":"vps ubuntu 16.04安装ss","date":"October 14, 2017"}}},"pageContext":{"slug":"/20171014-vps-config-intro/","previous":{"fields":{"slug":"/20170918-express学习笔记/"},"frontmatter":{"title":"express学习笔记","publish":null}},"next":{"fields":{"slug":"/20171102-vps-security-config/"},"frontmatter":{"title":"ubuntu vps security config","publish":null}}}}